from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import * 
from wired_module import * 
#	Generated By WiredQT for Python: by Rocky Nuarin, 2021 Phils
class Handler(QtWidgets.QWidget,usercontrol):
	def __init__(self, parent=None,*param):    
		super(Handler, self).__init__(parent)
		initUI(self,param,w=1000,h=600,title="WiredQTv5.0",controlbox=True,startpos=(0,30),timeoutdestroy=-1)
		self.GTKForms()
		self.timer=QtCore.QTimer()
		self.timer.timeout.connect(self.loop)
		self.timer.start(10)       
		self.sch=Scheduler(5000)#500 ms
		self.sch.Start()


	def createwidget(self,prop,control,parent,event=[]):
		createWidget(self,prop,control,parent,event)         
	def GTKForms(self):		self.createwidget("{'Text': '', 'camindex': '1', 'Help': '', 'Font': 'None', 'Events': [], 'Left': '417', 'Picture': '', 'Open': 'True', 'Tag': 'Activex', 'Top': '111', 'Enable': 'True', 'Height': '200', 'ForeColor': 'None', 'Width': '200', 'Visible': 'True', 'Var': '', 'ParentsType': '', 'BackColor': '(0, 0, 0, 0)', 'Name': 'WebCam3'}",'WebCam','usercontrol',"[]")
		self.createwidget("{'Text': '', 'Left': '355', 'Font': 'None', 'Enable': 'True', 'Picture': '', 'Top': '0', 'Tag': '', 'Help': '', 'BackColor': '[1.0, 1.0, 1.0, 0.24705882352941178]', 'Height': '100', 'ForeColor': '[0.0, 0.0, 0.0, 1.0]', 'Width': '170', 'Visible': 'True', 'Var': '', 'ParentsType': '', 'Events': '[currentRowChanged]', 'Name': 'QListWidget7'}",'QListWidget','usercontrol',"[['currentRowChanged', 'self,arg1'], ['currentTextChanged', 'self,arg1'], ['activated', 'self,arg1']]")
		self.createwidget("{'Text': 'QPushButton5', 'Left': '633', 'Font': 'None', 'Enable': 'True', 'Picture': '', 'Top': '177', 'Tag': '', 'Help': '', 'BackColor': '[1.0, 1.0, 1.0, 0.24705882352941178]', 'Height': '35', 'ForeColor': '[0.0, 0.0, 0.0, 1.0]', 'Width': '94', 'Visible': 'True', 'Var': '', 'ParentsType': '', 'Events': '[clicked]', 'Name': 'QPushButton5'}",'QPushButton','usercontrol',"[['clicked', 'self,arg1']]")
		self.createwidget("{'Text': '', 'Left': '648', 'Font': 'None', 'Enable': 'True', 'Picture': '', 'Top': '236', 'Tag': '', 'Help': '', 'BackColor': '[1.0, 1.0, 1.0, 0.24705882352941178]', 'Height': '27', 'ForeColor': '[0.0, 0.0, 0.0, 1.0]', 'Width': '143', 'Visible': 'True', 'Var': '', 'ParentsType': '', 'Events': [], 'Name': 'QComboBox6'}",'QComboBox','usercontrol',"[]")
		self.createwidget("{'Text': 'QPushButton2', 'Left': '661', 'Font': 'None', 'Enable': 'True', 'Picture': '', 'Top': '31', 'Tag': '', 'Help': '', 'BackColor': '[1.0, 1.0, 1.0, 0.24705882352941178]', 'Height': '100', 'ForeColor': '[0.0, 0.0, 0.0, 1.0]', 'Width': '100', 'Visible': 'True', 'Var': '', 'ParentsType': '', 'Events': '[clicked]', 'Name': 'QPushButton2'}",'QPushButton','usercontrol',"[['clicked', 'self,arg1']]")
		self.createwidget("{'Text': 'QPushButton0', 'Left': '536', 'Font': 'None', 'Enable': 'True', 'Picture': '', 'Top': '52', 'Tag': '', 'Help': '', 'BackColor': '[1.0, 1.0, 1.0, 0.24705882352941178]', 'Height': '30', 'ForeColor': '[0.0, 0.0, 0.0, 1.0]', 'Width': '101', 'Visible': 'True', 'Var': '', 'ParentsType': '', 'Events': '[clicked]', 'Name': 'QPushButton0'}",'QPushButton','usercontrol',"[['clicked', 'self,arg1']]")
		self.createwidget("{'Text': '', 'Left': '33', 'Font': 'None', 'Enable': 'True', 'Picture': '', 'Top': '214', 'ForeColor': '[0.0, 0.0, 0.0, 1.0]', 'Help': '', 'BackColor': '[1.0, 1.0, 1.0, 0.24705882352941178]', 'Height': '112', 'Tag': '', 'Width': '235', 'Visible': 'True', 'Var': '', 'ParentsType': '', 'Events': '[clicked]', 'Name': 'QTableView8'}",'QTableView','usercontrol',"[['clicked', 'self,arg1']]")
		self.createwidget("{'Text': '', 'Left': '418', 'Font': 'None', 'Enable': 'True', 'Picture': '', 'Top': '317', 'Tag': '', 'Help': '', 'BackColor': '[1.0, 1.0, 1.0, 0.24705882352941178]', 'Height': '93', 'ForeColor': '[0.0, 0.0, 0.0, 1.0]', 'Width': '278', 'Visible': 'True', 'Var': '', 'ParentsType': '', 'Events': [], 'Name': 'QListView4'}",'QListView','usercontrol',"[]")
		self.createwidget("{'Text': 'QLabel1', 'Left': '31', 'Font': 'None', 'BackColor': '[1.0, 1.0, 1.0, 0.24705882352941178]', 'Picture': '', 'Top': '63', 'Tag': '', 'Help': '', 'Enable': 'True', 'Height': '74', 'ForeColor': '[0.0, 0.0, 0.0, 1.0]', 'Width': '269', 'Visible': 'True', 'Var': '', 'ParentsType': '', 'Events': [], 'Name': 'QLabel1'}",'QLabel','usercontrol',"[]")
	def Widget(self):
		return self    
	def loop(self):
		if self.form_load==False:
			self.form_load=True
		if self.sch.Event():#timer routine
			#code here
			if self.timeoutdestroy!=-1:
				self.timeoutdestroy-=1
				if self.timeoutdestroy==0:
					pass#self.unload(None)
			self.sch.Start()#restart scheduler      

	def connect(self,ev,evusr):
		self.wiredevents.update({ev:evusr})     
	def activeXcreated(self,*args):
		pass    
	def eventFilter(self, obj, event):
		return super(Handler, self).eventFilter(obj, event)
	def donna(self):

		x=self.cc

		pass
	def QPushButton0_clicked(self,arg1):
		'''
		import cv2
		self.WebCam3.Open=True
		#x=cv2.imread('ESP8266-Pinout.jpg')

		#self.QLabel1.LoadPictureOCV=x
		'''

		self.donna()
		pass
	def QPushButton2_clicked(self,arg1):

		import cv2



		x=cv2.imread('Raspi pinout.png')



		self.QLabel1.LoadPictureOCV=x
		pass
	def WebCam3_frameReady(self,arg1):

		import pdb;pdb.set_trace()

		self.frame=arg1#buffer for saving

		#place your image proc here



		self.WebCam1.imshow(self.frame)#show image
		pass
	def QPushButton5_clicked(self,arg1):

		self.QComboBox6.List=["123","32123"]

		self.QListWidget7.List=["123","32123"]
		data = [

		        [4, 9, 2],

		        ["Fuck", 0, 0],

		  [3, 5, 0],

		  [3, 3, 2],

		  [7, 8, 9],

		]



		self.model = TableModel(["123","321","321"],data)

		self.QTableView8.setModel(self.model)		
		self.QComboBox6.showPopup()
		pass
	def QListWidget7_currentRowChanged(self,arg1):
		print('row',arg1)
		pass
	def QListWidget7_currentTextChanged(self,arg1):
		print('text',arg1)
		pass
	def QListWidget7_activated(self,arg1):
		pass
	def QTableView8_clicked(self,arg1):

		print(arg1.row(),arg1.column(),arg1.data())

		pass
if __name__ == '__main__':
	import sys
	app = QtWidgets.QApplication(sys.argv)
	w = Handler()
	w.show()
	sys.exit(app.exec_())


