import gi
import time
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk,GObject,Gdk,Pango,GLib
from wta_module import *
#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils
#	#####################www.WireThemAll.com#####################

class Handler(object):
	def __init__(self,*param):			
		initUI(self,param,w=400,h=400,title="WiredGTKV1.0",controlbox=True,startpos=(200,200),timeoutdestroy=-1)
		self.GTKForms()
		self.sch=Scheduler(500)#500 ms
		self.sch.Start()

	def unload(self,*args):
		destroy=True
		if destroy==True:
			GLib.source_remove(self.timeout_id)
			self._window.hide()
			del self._window
			#ExitApplication() #activate this if u want to destroy this window
			return False
		else:
			self.window.Visible=False
			return True		
	def loop(self, user_data):
		if self.form_load==False:
			self.form_load=True
		if self.sch.Event():#timer routine
			#code here
			if self.timeoutdestroy!=-1:
				self.timeoutdestroy-=1
				if self.timeoutdestroy==0:
					self.unload(None)
			self.sch.Start()#restart scheduler
		return True	#return true so that main_loop can call it again 
	def create(self,prop,control,parent,event=[]):
		createWidget(self,prop,control,parent,event)
	def GTKForms(self):
		self.Activity=forms
		self.create("{'Var': '', 'Text': 'Layout1', 'ParentsType': '', 'Height': '675', 'Left': '5', 'Tag': '', 'BackColor': '(0, 0.15818675032557372, 0.9408383013784336, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'Activity', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '390', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '5'}","Layout","usercontrol","[]")
		self.mBase=forms
		self.create("{'Var': '', 'Text': 'Layout1', 'ParentsType': 'Layout', 'Height': '675', 'Left': '0', 'Tag': '', 'BackColor': '(0, 0.9535890512821091, 0.7790916597141007, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'mBase', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '390', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '0'}","Layout","Activity","[]")
		self.Image1=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '655', 'Left': '0', 'Tag': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Name': 'Image1', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': 'HomeModule-1a5f0.png', 'Width': '370', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '0'}","Image","mBase","[]")
		self.btnProfile=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '45', 'Left': '10', 'Tag': '', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'btnProfile', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '55', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '5'}","Layout","mBase","[]")
		self.btnQr=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '45', 'Left': '307', 'Tag': '', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'btnQr', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '55', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '7'}","Layout","mBase","[]")
		self.btnOverview=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '35', 'Left': '22', 'Tag': '', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'btnOverview', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '155', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '152'}","Layout","mBase","[]")
		self.btnSchedule=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '35', 'Left': '197', 'Tag': '', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'btnSchedule', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '155', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '152'}","Layout","mBase","[]")
		self.btnUpload=forms
		self.create("{'Var': '', 'Text': 'Layout2', 'ParentsType': 'Layout', 'Height': '40', 'Left': '292', 'Tag': '', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'btnUpload', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '45', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '217'}","Layout","mBase","[]")
		self.btnMedications=forms
		self.create("{'Var': '', 'Text': 'Layout3', 'ParentsType': 'Layout', 'Height': '65', 'Left': '22', 'Tag': '', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'btnMedications', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '100', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '307'}","Layout","mBase","[]")
		self.btnAppointments=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '65', 'Left': '137', 'Tag': '', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'btnAppointments', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '100', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '307'}","Layout","mBase","[]")
		self.btnHotline=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '65', 'Left': '250', 'Tag': '', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'btnHotline', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '100', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '307'}","Layout","mBase","[]")
		self.btnUpdates=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '40', 'Left': '135', 'Tag': '', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'btnUpdates', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '90', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '612'}","Layout","mBase","[]")
		self.btnLogs=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '40', 'Left': '280', 'Tag': '', 'BackColor': '(0, 0.5070987989932315, 0.14762284075298326, 0.5)', 'ForeColor': '(0,0,0,1)', 'Name': 'btnLogs', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '90', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '612'}","Layout","mBase","[]")
		self.lblName=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '80', 'Left': '20', 'Tag': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Name': 'lblName', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Alignment': '', 'Width': '330', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '65'}","Label","mBase","[]")
		self.lblProgress=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '25', 'Left': '30', 'Tag': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Name': 'lblProgress', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Alignment': '', 'Width': '250', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '230'}","Label","mBase","[]")
		self.progressBar=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '25', 'Left': '30', 'Tag': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Name': 'progressBar', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Alignment': '', 'Width': '305', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '265'}","Label","mBase","[]")
		self.pDocList=forms
		self.create("{'Var': '', 'Text': '', 'ParentsType': 'Layout', 'Height': '185', 'Left': '30', 'Tag': '', 'BackColor': '(1,1,1,1)', 'ForeColor': '(0,0,0,1)', 'Name': 'pDocList', 'Events': '[[, ]]', 'Enable': 'True', 'Picture': '', 'Width': '315', 'Help': '', 'Visible': 'True', 'Font': '', 'Top': '400'}","ListBox","mBase","[]")
	def Widget(self):
		if self._usercontrol in self._mainlayout.get_children():
			self._mainlayout.remove(self._usercontrol)
		return self._usercontrol
	def Hide(self):
		self._window.hide()
	def Show(self,modal=False,x=None,y=None):
		if x!=None:
			self._window.move(x,y)
		self._window.set_modal(modal)
		self._window.show()
		Gtk.main()
		return ""#put ur return value here upon closing this form
if __name__ == "__main__":
	_m = Handler()
	_m._window.show()
	Gtk.main()