from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import * 
from wired_module import * 
#	Generated By WiredQT for Python: by Rocky Nuarin, 2021 Phils
class Handler(QtWidgets.QWidget,usercontrol):
	def __init__(self, *param):    
		super(Handler, self).__init__(None)
		initUI(self,param,w=400,h=400,title="WiredQTv5.0",controlbox=True,startpos=(0,30),timeoutdestroy=-1)
		self.GTKForms()
		self.timer=QtCore.QTimer()
		self.timer.timeout.connect(self.loop)
		self.timer.start(10)       

		self.sch=Scheduler(5000)#500 ms
		self.sch.Start()
		

	def createwidget(self,prop,control,parent,event=[]):
		createWidget(self,prop,control,parent,event)         
	def GTKForms(self):		self.createwidget("{'Help': '', 'Picture': '', 'Text': 'Question', 'Left': '38', 'Height': '25', 'ParentsType': '', 'Visible': 'True', 'Width': '99', 'Name': 'QPushButton4', 'Var': '', 'BackColor': '(1,1,1,0.25)', 'Top': '141', 'Events': '[clicked]', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'Enable': 'True'}",'QPushButton','usercontrol',"[['clicked', 'self,arg1']]")
		self.createwidget("{'Help': '', 'Picture': '', 'Text': 'About', 'Left': '144', 'Height': '25', 'ParentsType': '', 'Visible': 'True', 'Width': '96', 'Name': 'QPushButton1', 'Var': '', 'BackColor': '(1,1,1,0.25)', 'Top': '141', 'Events': '[clicked]', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Tag': '', 'Enable': 'True'}",'QPushButton','usercontrol',"[['clicked', 'self,arg1']]")
	def Widget(self):
		return self    
	def loop(self):
		if self.form_load==False:
			self.form_load=True
		if self.sch.Event():#timer routine
			#code here
			if self.timeoutdestroy!=-1:
				self.timeoutdestroy-=1
				if self.timeoutdestroy==0:
					pass#self.unload(None)
			self.sch.Start()#restart scheduler      
		
	def connect(self,ev,evusr):
		self.wiredevents.update({ev:evusr})     
	def activeXcreated(self,*args):
		pass    
	def eventFilter(self, obj, event):
		return super(Handler, self).eventFilter(obj, event)
	
	def QPushButton1_clicked(self,arg1):
		q=QMessageBox.about(self, "Title", "Message")
		print(q)
	def QPushButton3_clicked(self,arg1):

		
		
		pass
	def QPushButton4_clicked(self,arg1):
		#directly use QMessageBox
		ret = QMessageBox.question(self, 'MessageBox', "Click a button", QMessageBox.Yes | QMessageBox.No | QMessageBox.Cancel, QMessageBox.Cancel)
		print(ret)
		if ret == QMessageBox.Yes:
		    print('Button QMessageBox.Yes clicked.')

		pass
if __name__ == '__main__':
	import sys
	app = QtWidgets.QApplication(sys.argv)
	w = Handler()
	w.show()
	sys.exit(app.exec_())
