from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import * 
from wired_module import * 
#	Generated By WiredQT for Python: by Rocky Nuarin, 2021 Phils
class Handler(QtWidgets.QWidget,usercontrol):
	def __init__(self, *param):    
		super(Handler, self).__init__(None)
		initUI(self,param,w=400,h=400,title="WiredQTv5.0",controlbox=True,startpos=(0,30),timeoutdestroy=-1)
		self.GTKForms()
		self.timer=QtCore.QTimer()
		self.timer.timeout.connect(self.loop)
		self.timer.start(10)       

		self.sch=Scheduler(5000)#500 ms
		self.sch.Start()
		self.qi= QIntValidator(0, 100, self) 
		self.qf= QDoubleValidator(0, 100.25,2, self) 
		self.QLineEdit0.setValidator(self.qi)
		self.QLineEdit1.setValidator( self.qf )
	def createwidget(self,prop,control,parent,event=[]):
		createWidget(self,prop,control,parent,event)         
	def GTKForms(self):
		self.createwidget("{'Enable': 'True', 'Visible': 'True', 'Tag': '', 'Top': '100', 'Width': '85', 'Name': 'QLineEdit0', 'Left': '50', 'Var': '', 'Font': '', 'Help': '', 'ForeColor': '(0,0,0,1)', 'BackColor': '(1,1,1,0.25)', 'ParentsType': '', 'Picture': '', 'Height': '26', 'Text': '0', 'Events': '[textChanged]'}",'QLineEdit','usercontrol',"[['textChanged', 'self,arg1']]")
		self.createwidget("{'Enable': 'True', 'Visible': 'True', 'Tag': '', 'Top': '100', 'Width': '85', 'Name': 'QLineEdit1', 'Left': '152', 'Var': '', 'Font': '', 'Help': '', 'ForeColor': '(0,0,0,1)', 'BackColor': '(1,1,1,0.25)', 'ParentsType': '', 'Picture': '', 'Height': '26', 'Text': '0.0', 'Events': '[textChanged]'}",'QLineEdit','usercontrol',"[['textChanged', 'self,arg1']]")
		self.createwidget("{'Enable': 'True', 'Visible': 'True', 'Tag': '', 'Top': '76', 'Width': '87', 'Name': 'QLabel3', 'Left': '152', 'Var': '', 'Font': '', 'Help': '', 'ForeColor': '(0,0,0,1)', 'BackColor': '(1,1,1,0.25)', 'ParentsType': '', 'Picture': '', 'Height': '23', 'Text': 'QDoubleValidator', 'Events': []}",'QLabel','usercontrol',"[]")
		self.createwidget("{'Enable': 'True', 'Visible': 'True', 'Tag': '', 'Top': '77', 'Width': '89', 'Name': 'QLabel2', 'Left': '48', 'Var': '', 'Font': '', 'Help': '', 'ForeColor': '(0,0,0,1)', 'BackColor': '(1,1,1,0.25)', 'ParentsType': '', 'Picture': '', 'Height': '20', 'Text': 'QIntValidator', 'Events': []}",'QLabel','usercontrol',"[]")
	def Widget(self):
		return self    
	def loop(self):
		if self.form_load==False:
			self.form_load=True
		if self.sch.Event():#timer routine
			#code here
			if self.timeoutdestroy!=-1:
				self.timeoutdestroy-=1
				if self.timeoutdestroy==0:
					pass#self.unload(None)
			self.sch.Start()#restart scheduler      
		
	def connect(self,ev,evusr):
		self.wiredevents.update({ev:evusr})     
	def activeXcreated(self,*args):
		pass    
	def eventFilter(self, obj, event):
		return super(Handler, self).eventFilter(obj, event)
	
	
	def QLineEdit0_textChanged(self,arg1):
		x=self.qi.validate(arg1,0)
		if x[0]!=2:
			print("invalid value, should be in range of 0, 100")
		else:
			print("acceptable")
		pass
	def QLineEdit1_textChanged(self,arg1):
		x=self.qf.validate(arg1,0)
		if x[0]!=2:
			print("invalid value, should be in range of 0, 100.25")
		else:
			print("acceptable")
		pass
if __name__ == '__main__':
	import sys
	app = QtWidgets.QApplication(sys.argv)
	w = Handler()
	w.show()
	sys.exit(app.exec_())
