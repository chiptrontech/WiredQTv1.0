from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import * 
from wired_module import * 
#	Generated By WiredQT for Python: by Rocky Nuarin, 2021 Phils
class Handler(QtWidgets.QWidget,usercontrol):
	def __init__(self, *param):    
		super(Handler, self).__init__(None)
		initUI(self,param,w=400,h=400,title="WiredQTv5.0",controlbox=True,startpos=(0,30),timeoutdestroy=-1)
		self.GTKForms()
		self.timer=QtCore.QTimer()
		self.timer.timeout.connect(self.loop)
		self.timer.start(10)       

		self.sch=Scheduler(5000)#500 ms
		self.sch.Start()
		
		self.QComboBox5.List= QFontDatabase().families()

		
	def createwidget(self,prop,control,parent,event=[]):
		createWidget(self,prop,control,parent,event)         
	def GTKForms(self):		self.createwidget("{'Visible': 'True', 'Var': '', 'Events': '[clicked]', 'Enable': 'True', 'ForeColor': '[0.3333333333333333, 1.0, 0.0, 1.0]', 'Tag': '', 'BackColor': '[0.6666666666666666, 0.6666666666666666, 1.0, 1.0]', 'Left': '220', 'ParentsType': '', 'Top': '33', 'Text': 'getText', 'Height': '73', 'Width': '168', 'Help': '', 'Picture': '', 'Font': 'Agency FB 40', 'Name': 'QPushButton3'}",'QPushButton','usercontrol',"[['clicked', 'self,arg1']]")
		self.createwidget("{'Visible': 'True', 'Var': '', 'Events': '[currentTextChanged]', 'Enable': 'True', 'Left': '51', 'Tag': '', 'BackColor': '(1,1,1,0.25)', 'ParentsType': '', 'Top': '32', 'Text': '', 'Height': '33', 'Width': '133', 'Help': '', 'Picture': '', 'Font': '', 'ForeColor': '(0,0,0,1)', 'Name': 'QComboBox5'}",'QComboBox','usercontrol',"[['currentTextChanged', 'self,arg1']]")
		self.createwidget("{'Name': 'size', 'Var': '', 'Font': '', 'Enable': 'True', 'Top': '71', 'Width': '123', 'ParentsType': '', 'Picture': '', 'ForeColor': '(0,0,0,1)', 'Visible': 'True', 'BackColor': '(1,1,1,0.25)', 'Events': [], 'Height': '21', 'Left': '54', 'Tag': '', 'Text': '10', 'Help': ''}",'QLineEdit','usercontrol',"[]")
	def Widget(self):
		return self    
	def loop(self):
		if self.form_load==False:
			self.form_load=True
		if self.sch.Event():#timer routine
			#code here
			if self.timeoutdestroy!=-1:
				self.timeoutdestroy-=1
				if self.timeoutdestroy==0:
					pass#self.unload(None)
			self.sch.Start()#restart scheduler      
		
	def connect(self,ev,evusr):
		self.wiredevents.update({ev:evusr})     
	def activeXcreated(self,*args):
		pass    
	def eventFilter(self, obj, event):
		return super(Handler, self).eventFilter(obj, event)
	
	def setBold(self,obj,flag):
		x=obj.font()

		x.setBold(flag)

		obj.setFont(x)
		pass

	def QComboBox5_currentTextChanged(self,arg1):
		self.QPushButton3.Font=arg1+ " " + self.size.Text
		pass
	def QPushButton3_clicked(self,arg1):

		self.setBold(self.QPushButton3,True)
		pass
if __name__ == '__main__':
	import sys
	app = QtWidgets.QApplication(sys.argv)
	w = Handler()
	w.show()
	sys.exit(app.exec_())
