import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *import _adafruit_fingerprint as adafruit_fingerprint#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(usercontrol):	#WiredEvent def usercontrolevent(self,value)	#add more events 	#WiredProperty 'usercontrolproperty': 'sample only'		def __init__(self,*param):					initUI(self,param,w=400,h=400,title="WiredGTKV1.0",controlbox=True,startpos=(200,200),timeoutdestroy=-1)		self.GTKForms()		super().__init__(self.usercontrol)		self.sch=Scheduler(500)#500 ms		self.sch.Start()		self._text=''		self._usercontrolproperty=''		self.ctlFP_BEG2801.Open()		#self.ctlFP_BEG2801.test()		self.notif=None	@property		def usercontrolproperty(self):		return self._usercontrolproperty	@usercontrolproperty.setter		def usercontrolproperty(self,value):		self._usercontrolproperty=value	def connect(self,ev,evusr):		self.wiredevents.update({ev:evusr})	def activeXcreated(self,*args):		pass	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			#ExitApplication() #activate this if u want to destroy this window			return False		else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.notif!=None:			self.Entry2.Text=self.notif			self.notif=None		if self.sch.Event():#timer routine			#code here			if self.timeoutdestroy!=-1:				self.timeoutdestroy-=1				if self.timeoutdestroy==0:					self.unload(None)			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 		def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Tag': '', 'Picture': '', 'Top': '264', 'ForeColor': '(0,0,0,1)', 'Help': '', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Name': 'Button1', 'Left': '219', 'Height': '50', 'Text': 'Verify', 'Font': '', 'Width': '100', 'Events': '[clicked]', 'Var': '', 'Enable': 'True', 'ParentsType': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Tag': '', 'Picture': '', 'Top': '227', 'Alignment': '', 'ForeColor': '(0,0,0,1)', 'Help': '', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Name': 'Entry1', 'Left': '221', 'Height': '30', 'Text': 'Entry1', 'Font': '', 'Width': '409', 'Events': '[[, ]]', 'Var': '', 'Enable': 'True', 'ParentsType': ''}","Entry","usercontrol","[]")		self.create("{'Tag': '', 'Picture': '', 'Top': '261', 'ForeColor': '(0,0,0,1)', 'Help': '', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Name': 'Button2', 'Left': '322', 'Height': '50', 'Text': 'Enroll', 'Font': '', 'Width': '100', 'Events': '[clicked]', 'Var': '', 'Enable': 'True', 'ParentsType': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Tag': '', 'Picture': '', 'Top': '260', 'ForeColor': '(0,0,0,1)', 'Help': '', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Name': 'Button3', 'Left': '425', 'Height': '52', 'Text': 'Delete', 'Font': '', 'Width': '100', 'Events': '[clicked]', 'Var': '', 'Enable': 'True', 'ParentsType': ''}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Tag': '', 'Picture': '', 'Top': '185', 'Alignment': '', 'ForeColor': '(0,0,0,1)', 'Help': '', 'Visible': 'True', 'BackColor': '(1,1,1,1)', 'Name': 'Entry2', 'Left': '337', 'Height': '30', 'Text': 'Entry2', 'Font': '', 'Width': '323', 'Events': '[[, ]]', 'Var': '', 'Enable': 'True', 'ParentsType': ''}","Entry","usercontrol","[]")		self.create("{'Tag': 'Activex', 'Picture': 'FP_Adafruit.png', 'Top': '115', 'ForeColor': '(0,0,0,1)', 'Help': '', 'Visible': 'True', 'BackColor': '(0, 0.27895544726290855, 0.3937214467731809, 0.5)', 'Name': 'ctlFP_BEG2801', 'Left': '210', 'Height': '30', 'Text': 'FP_Adafruit1', 'Font': '', 'Width': '30', 'Port': '/dev/ttyS0', 'Setting': '57600,n,8,1', 'Events': '[Notification, VerifyFinish]', 'Var': '', 'Enable': 'True', 'ParentsType': ''}","FP_Adafruit","usercontrol","[['Notification', 'self,notif'], ['VerifyFinish', 'self,id,confidence']]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False,x=None,y=None):		if x!=None:			self._window.move(x,y)		self._window.set_modal(modal)		self._window.show()		Gtk.main()		return ""#put ur return value here upon closing this form	def Button1_clicked(self,e):		self.ctlFP_BEG2801.get_fingerprint()		pass	def Button2_clicked(self,e):		x=int(self.Entry1.Text)		self.ctlFP_BEG2801.enroll_finger(x)		pass	def Button3_clicked(self,e):		x=int(self.Entry1.Text)		if self.ctlFP_BEG2801.finger.delete_model(x) == adafruit_fingerprint.OK:			strs="Deleted!"		else:			strs="Failed to delete"		self.Entry1.Text=strs		pass	def ctlFP_BEG2801_VerifyFinish(self,id,confidence):		self.Entry1.Text=id		pass	def ctlFP_BEG2801_Notification(self,notif):				self.notif=notif		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()