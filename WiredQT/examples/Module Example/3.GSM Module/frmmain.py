import giimport timegi.require_version('Gtk', '3.0')from gi.repository import Gtk,GObject,Gdk,Pango,GLibfrom wta_module import *#	Generated By WiredGTK for Python: by Rocky Nuarin, 2018 Phils#	#####################www.WireThemAll.com#####################class Handler(object):	def __init__(self,*param):					initUI(self,param,w=400,h=400,title="WiredGTKV1.0",controlbox=True,startpos=(200,200),timeoutdestroy=-1)		self.GTKForms()		self.sch=Scheduler(500)#500 ms		self.sch.Start()		self.GSM_A7X1.Open=True	def unload(self,*args):		destroy=True		if destroy==True:			GLib.source_remove(self.timeout_id)			self._window.hide()			del self._window			#ExitApplication() #activate this if u want to destroy this window			return False		else:			self.window.Visible=False			return True			def loop(self, user_data):		if self.form_load==False:			self.form_load=True		if self.sch.Event():#timer routine			#code here			if self.timeoutdestroy!=-1:				self.timeoutdestroy-=1				if self.timeoutdestroy==0:					self.unload(None)			self.sch.Start()#restart scheduler		return True	#return true so that main_loop can call it again 	def create(self,prop,control,parent,event=[]):		createWidget(self,prop,control,parent,event)	def GTKForms(self):		self.create("{'Height': '25', 'Events': '[OnCall, OnSMS_Received]', 'Enable': 'True', 'Left': '175', 'Visible': 'True', 'Width': '30', 'Picture': 'GSM_A7X.png', 'Tag': 'Activex', 'Port': '/dev/ttyUSB0', 'Font': '', 'ParentsType': '', 'Text': 'GSM_A7X1', 'BackColor': '(0, 0.5896813526535403, 0.05491761953650465, 0.5)', 'Help': '', 'Var': '', 'Top': '125', 'ForeColor': '(0,0,0,1)', 'PortSetting': '9600,n,8,1', 'Name': 'GSM_A7X1'}","GSM_A7X","usercontrol","[['OnCall', 'self,phone'], ['OnSMS_Received', 'self,phone,message']]")		self.create("{'Height': '30', 'Events': '[[, ]]', 'Enable': 'True', 'Left': '175', 'Visible': 'True', 'Width': '170', 'Picture': '', 'Tag': '', 'Font': '', 'ParentsType': '', 'Text': '09215533290', 'BackColor': '(1,1,1,1)', 'Help': '', 'Var': '', 'Alignment': '', 'Top': '170', 'ForeColor': '(0,0,0,1)', 'Name': 'Entry1'}","Entry","usercontrol","[]")		self.create("{'Height': '50', 'Events': '[clicked]', 'Enable': 'True', 'Left': '175', 'Visible': 'True', 'Width': '100', 'Picture': '', 'Tag': '', 'Font': '', 'ParentsType': '', 'Text': 'SendSMS', 'BackColor': '(1,1,1,1)', 'Help': '', 'Var': '', 'Top': '245', 'ForeColor': '(0,0,0,1)', 'Name': 'Button1'}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Height': '30', 'Events': '[[, ]]', 'Enable': 'True', 'Left': '175', 'Visible': 'True', 'Width': '170', 'Picture': '', 'Tag': '', 'Font': '', 'ParentsType': '', 'Text': 'Hello There', 'BackColor': '(1,1,1,1)', 'Help': '', 'Var': '', 'Alignment': '', 'Top': '205', 'ForeColor': '(0,0,0,1)', 'Name': 'Entry2'}","Entry","usercontrol","[]")		self.create("{'Height': '50', 'Events': '[clicked]', 'Enable': 'True', 'Left': '180', 'Visible': 'True', 'Width': '100', 'Picture': '', 'Tag': '', 'Font': '', 'ParentsType': '', 'Text': 'Call', 'BackColor': '(1,1,1,1)', 'Help': '', 'Var': '', 'Top': '330', 'ForeColor': '(0,0,0,1)', 'Name': 'Button2'}","Button","usercontrol","[['clicked', 'self,e']]")		self.create("{'Height': '30', 'Events': '[[, ]]', 'Enable': 'True', 'Left': '180', 'Visible': 'True', 'Width': '170', 'Picture': '', 'Tag': '', 'Font': '', 'ParentsType': '', 'Text': '09959035255', 'BackColor': '(1,1,1,1)', 'Help': '', 'Var': '', 'Alignment': '', 'Top': '300', 'ForeColor': '(0,0,0,1)', 'Name': 'Entry3'}","Entry","usercontrol","[]")		self.create("{'Height': '170', 'Events': '[[, ]]', 'Enable': 'True', 'Left': '385', 'Visible': 'True', 'Width': '190', 'Picture': '', 'Tag': '', 'Font': '', 'ParentsType': '', 'Text': 'Call and SMS Notif', 'BackColor': '(1,1,1,1)', 'Help': '', 'Var': '', 'Top': '165', 'ForeColor': '(0,0,0,1)', 'Name': 'TextView1'}","TextView","usercontrol","[]")	def Widget(self):		if self._usercontrol in self._mainlayout.get_children():			self._mainlayout.remove(self._usercontrol)		return self._usercontrol	def Hide(self):		self._window.hide()	def Show(self,modal=False,x=None,y=None):		if x!=None:			self._window.move(x,y)		if modal and self.caller!=None:			self._window.set_transient_for(self.caller._window)		self._window.set_modal(modal)		self._window.show()		Gtk.main()		return ""#put ur return value here upon closing this form	def Button1_clicked(self,e):		self.GSM_A7X1.SendSms(self.Entry1.Text,self.Entry2.Text)		pass	def GSM_A7X1_OnCall(self,phone):		self.TextView1.Text="Calling from : " + phone		pass	def GSM_A7X1_OnSMS_Received(self,phone,message):		self.TextView1.Text="From : " + phone + "\n" + message		pass	def Button2_clicked(self,e):		self.GSM_A7X1.CallNumber(self.Entry3.Text)		passif __name__ == "__main__":	_m = Handler()	_m._window.show()	Gtk.main()